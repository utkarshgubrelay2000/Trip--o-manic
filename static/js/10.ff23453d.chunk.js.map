{"version":3,"sources":["store/index.js","container/Auth/Login/Login.js"],"names":["Login","state","placeholder","type","className","value","error","loading","authanticationLoginHandler","props","console","log","ChangeHandler","e","i","IInput","target","setState","customToken","localStorage","getItem","to","this","errorMessage","map","items","key","onChange","required","onClick","renderHandler","Component","connect","token","dispatch","p","actionTypes"],"mappings":"mGAAA,iG,6JCQMA,E,4MAEFC,MAAQ,CACJD,MAAO,CACH,CAAEE,YAAa,WAAYC,KAAM,OAAQC,UAAW,YAAaC,MAAO,IACxE,CAAEH,YAAa,WAAYC,KAAM,WAAYC,UAAW,YAAcC,MAAO,KAGjFC,MAAO,KACPC,SAAS,G,EAGbC,2BAA6B,WAEzB,EAAKC,MAAMT,MAAM,EAAKC,MAAMD,MAAM,GAAGK,MAAO,EAAKJ,MAAMD,MAAM,GAAGK,OAChEK,QAAQC,IAAI,EAAKF,MAAMF,U,EAE3BK,cAAgB,SAACC,EAAGC,GAEhB,IAAIC,EAAM,YAAO,EAAKd,MAAMD,OAC5Be,EAAOD,GAAGT,MAAQQ,EAAEG,OAAOX,MAC3B,EAAKY,SAAS,CACVF,Y,uDAKE,IAAD,OACCG,EAAcC,aAAaC,QAAQ,SACzC,OAAQ,oCACHF,EAAc,kBAAC,IAAD,CAAUG,GAAG,MAASC,KAAKb,MAAMH,MAAQ,kBAAC,IAAD,CAAOiB,aAAcD,KAAKb,MAAMH,QACpF,yBAAKF,UAAU,aACVkB,KAAKb,MAAMF,QAAU,kBAAC,IAAD,MAClB,6BACKe,KAAKrB,MAAMD,MAAMwB,KAAI,SAACC,EAAOX,GAC1B,OACI,yBAAKY,IAAKD,EAAMvB,YAAaE,UAAU,aAAvC,IAAqD,2BAAQA,UAAU,gBAClEqB,EAAMvB,aAEP,kBAAC,IAAD,CAAOyB,SAAU,SAACd,GAAD,OAAO,EAAKD,cAAcC,EAAGC,IAAIV,UAAWqB,EAAMrB,UAAWwB,UAAQ,EAACzB,KAAMsB,EAAMtB,KAAMD,YAAauB,EAAMvB,kBAIxI,4BAAQE,UAAU,cAAcyB,QAASP,KAAKd,4BAA9C,UAIR,0BAAMJ,UAAU,gBAAhB,+BAGI,4BAAQA,UAAU,cAAcyB,QAASP,KAAKb,MAAMqB,eAApD,gB,GAlDJC,aAuELC,uBAPU,SAAA/B,GACrB,MAAO,CACHgC,MAAOhC,EAAMD,MAAMiC,MACnB3B,MAAOL,EAAMD,MAAMM,MACnBC,QAASN,EAAMD,MAAMO,YAVD,SAAA2B,GACxB,MAAO,CACHlC,MAAO,SAACa,EAAGsB,GAAJ,OAAUD,EAASE,IAAiBvB,EAAGsB,QAWvCH,CAA+ChC","file":"static/js/10.ff23453d.chunk.js","sourcesContent":["export {\r\n    user\r\n} from './reducers/Loginreducers'\r\nexport {\r\n    Signup\r\n} from './reducers/signUpReducer'","import React, { Component } from 'react'\r\nimport Input from '../../../ui/input'\r\nimport Spinner from '../../../ui/spinner'\r\nimport Error from '../../../ui/Error'\r\nimport '../Auth.css'\r\nimport { connect } from 'react-redux'\r\nimport * as actionTypes from '../../../store/index'\r\nimport { Redirect } from 'react-router-dom'\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        Login: [\r\n            { placeholder: 'UserName', type: 'text', className: 'inputType', value: '' },\r\n            { placeholder: 'Password', type: 'Password', className: 'inputType',  value: '' },\r\n\r\n        ],\r\n        error: null,\r\n        loading: false\r\n\r\n    }\r\n    authanticationLoginHandler = () => {\r\n\r\n        this.props.Login(this.state.Login[0].value, this.state.Login[1].value)\r\n        console.log(this.props.loading);\r\n    }\r\n    ChangeHandler = (e, i) => {\r\n\r\n        let IInput = [...this.state.Login]\r\n        IInput[i].value = e.target.value\r\n        this.setState({\r\n            IInput\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const customToken = localStorage.getItem('token')\r\n        return (<>\r\n            {customToken ? <Redirect to='/' /> : this.props.error ? <Error errorMessage={this.props.error} /> :\r\n                <div className=\"middleDiv\">\r\n                    {this.props.loading ? <Spinner /> :\r\n                        <div>\r\n                            {this.state.Login.map((items, i) => {\r\n                                return (\r\n                                    <div key={items.placeholder} className='signUpdiv' > <label  className=\"label_Signup\">\r\n                                        {items.placeholder}\r\n                                    </label>\r\n                                        <Input onChange={(e) => this.ChangeHandler(e, i)} className={items.className} required type={items.type} placeholder={items.placeholder} />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                            <button className='ButtonLogin' onClick={this.authanticationLoginHandler} >\r\n                                Login\r\n    </button>\r\n                        </div>}\r\n                    <span className='AccountLogin'>\r\n                        Don't have a account Create \r\n                    </span>\r\n                        <button className='Authhandler' onClick={this.props.renderHandler}>\r\n                            SignUp\r\n       </button>\r\n                </div>}\r\n        </>\r\n        )\r\n    }\r\n}\r\nconst mapsDispatchToProps = dispatch => {\r\n    return {\r\n        Login: (e, p) => dispatch(actionTypes.user(e, p))\r\n    }\r\n\r\n}\r\nconst mapsStateToProps = state => {\r\n    return {\r\n        token: state.Login.token,\r\n        error: state.Login.error,\r\n        loading: state.Login.loading,\r\n    }\r\n}\r\nexport default connect(mapsStateToProps, mapsDispatchToProps)(Login);"],"sourceRoot":""}